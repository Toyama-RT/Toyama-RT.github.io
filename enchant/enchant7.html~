<!DOCTYPE html>
<html lang="ja">
  <head>

    <meta content="text/html; charset=utf-8" http-equiv="content-type">
    <script type="text/javascript" src="../sh/scripts/shCore.js"></script>
    <script type="text/javascript" src="../sh/scripts/shBrushXml.js"></script>
    <script type="text/javascript" src="../sh/scripts/shBrushPlain.js"></script>
    <script type="text/javascript" src="../sh/scripts/shBrushJScript.js"></script>
    <script type="text/javascript" src="../sh/scripts/shBrushVb.js"></script>

    <link type="text/css" rel="stylesheet" href="../sh/styles/shCoreDefault.css">
    <script type="text/javascript">SyntaxHighlighter.all();</script>
    <title>エンチャント文字盤の音と声</title>
    <style type="text/css">

<!--
      
p	{
      font-size: 20px;
      line-height : 1.5 ;
      margin: 5px 100px 15px 100px;
	}
h1 {
    text-align: center;
    }
h2 {
    text-align: left;
      margin-left: 40px;
    }
pre {
    font-size: 20px;
    margin: 5px 100px 15px 100px;
    }
address{
	margin:5px 100px 15px 100px;
}      
ol {
}
ul {
}
li {
  margin-top: 5px; /* 上余白指定 */
  margin-bottom: 5px; /* 下余白指定 */
  margin-left: 100px; /* 左余白指定*/
  margin-right: 100px; /* 右余白指定 */
  font-size: 20px; /*リストのフォントの大きさ*/
}

span.samples {font-size: small; }

.syntaxhighlighter {
  width: 80% !important;
  margin: 1em 100px 1em 100px !important;
  position: relative !important;
  overflow: auto !important;
  font-size: 1.3em !important;
}

    #text1 {
        width: 50%;
        height: 3em;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 3px;
        margin-bottom: 10px;
        font-size: 1.4em;
        font-weight: 700;
    }
    #btn1 {
        background: -webkit-linear-gradient(top,#008dfd 30%,#0370ea 100%);
        color: white;
        text-shadow: 1px 1px 1px #076bd2;
        border-radius: 3px;
        border: 1px solid #076bd2;
        padding: 2px 25px;
        font-weight: 700;
        font-size: 20px;
    }
    #selectVoice1 {
        width: 200px;
        font-weight: 700;
        font-size: 20px;

    }
    #text2 {
        width: 50%;
        height: 3em;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 3px;
        margin-bottom: 10px;
        font-size: 1.4em;
        font-weight: 700;
    }
    #btn2 {
        background: -webkit-linear-gradient(top,#008dfd 30%,#0370ea 100%);
        color: white;
        text-shadow: 1px 1px 1px #076bd2;
        border-radius: 3px;
        border: 1px solid #076bd2;
        padding: 2px 25px;
        font-weight: 700;
        font-size: 20px;
    }
    #selectVoice2 {
        width: 200px;
        font-weight: 700;
        font-size: 20px;

    }
    #text3 {
        width: 50%;
        height: 3em;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 3px;
        margin-bottom: 10px;
        font-size: 1.4em;
        font-weight: 700;
    }
    #btn3 {
        background: -webkit-linear-gradient(top,#008dfd 30%,#0370ea 100%);
        color: white;
        text-shadow: 1px 1px 1px #076bd2;
        border-radius: 3px;
        border: 1px solid #076bd2;
        padding: 2px 25px;
        font-weight: 700;
        font-size: 20px;
    }
    #selectVoice3 {
        width: 200px;
        font-weight: 700;
        font-size: 20px;

    }


-->
</style>

 </head>
  <body>
<!-- generated by: jsdo.it - http://jsdo.it/y.munesada/8qn5 -->
<!-- Copyright y.munesada - http://jsdo.it/y.munesada -->
<!-- Licensed under MIT License - http://www.opensource.org/licenses/mit-license.php -->

<p align="center"><font size="5"><font size="5"><font size="3"><font color="#ff0000">かならずお読みください</font>→<a href="../cyuui.html" target="_self"><img alt="注意事項" src="../cyuuijikou.gif" border="0" height="29" width="78" /></a></font></font></font></p>


    <h1>エンチャント文字盤の音と声</h1><H1>第二回　声の役割と出す方法</h1>

<p align='center'  style="font-weight:700;">

下の欄に日本文を入力して「話す」をクリックしてください<br>
<input id="text1" type="text" value="こんにちは"/><br>
<br>
<input id="btn1" type="button" value="話す" style="width:200px;"/>
<select id="selectVoice1">
    <option value="ja-JP">日本語</option>

</select>
<br><br>
下の欄に英文を入力して「話す」をクリックしてください<br>
<input id="text2" type="text" value="Hello"/><br>
<br>
<input id="btn2" type="button" value="話す" style="width:200px;"/>
<select id="selectVoice2">
    <option value="en-US">英語</option>

</select>

<br><br>
下の欄にフランス語の文を入力して「話す」をクリックしてください<br>
<input id="text3" type="text" value="Bonjour"/><br>
<br>
<input id="btn3" type="button" value="話す" style="width:200px;"/>
<select id="selectVoice3">
    <option value="fr-FR">フランス語</option>

</select>
</p>
    <script type="text/javascript" src="index.js"></script>
<p>
ご注意　大変残念なことに三カ国各国語を話すようになるにはいくらかの工夫が必要です。初めての言語を発話する際に必要な言語データのダウンロードがはじまります。ChromeやEdgeを使用すると各国語とも比較的早く発話できるようになります。Firefoxでは日本語を発話できません。ios　safariではかなり時間が（日時が）かかります。詳細は次回。
</p>
<h2>声に対するいろいろな思い</h2>
<p>
自分の声を失った人やその家族の『失われた声』への思いにはずいぶんちがいがあります。
失った声を人工的に再現したいと望まれるケースもあり、そのための技術もビジネスも存在します。その人が美声または個性的な声の持ち主だったのかもしれないと想像すると声への思いの深さも納得できます。しかしこの一方で言いたいことさえ伝われば方法には特にこだわらないという人もいます。この気持ちもわかります。とかく気にしない人はとんと気にしないようです。
</p><p>
形を取るか実を取るか。声の場合にもそれぞれの価値観によりおおきなちがいがあらわれるようです。

</p>
<h2>声が出ると何がいいか</h2>
<p>
『声』が出せると少し離れた場所で別の用事をしている人を呼ぶことができます。用があれば呼んでもらえると思えば、介護する人の行動範囲が広がり気持ちも楽になり生活の質の改善が期待できます。またご本人もひとりの時間がもてるようになります。距離が近すぎるといろいろ苦しいもののようです。
</p><p>
もちろんブザーでも同じことができます。これで十分だと思う人もいるしまたその人らしい言葉のほうがいいと思う人もいるでしょう。

コミュニケーションエイドで文章を作ってこれを読み上げたら、隣の部屋から返事ができます。これがブザー呼び出しなら、ベッドサイドにやって来て画面をみなければなりません。
</p><p>
どんなやりかたがいいのでしょうか。コミュニケーションに参加するご本人とご家族と周囲のみなさんたちとで考えるのがいいでしょう。コミュニケーションは、単に尋ねて答えるだけでなく、お互い求めて応えてよりよく暮らすためのものと考えていくと、『声』はあればあったでいいものでしょう。
</p>
<h2>お金がかからないと何がいいか</h2>
<p>
さきにお話ししたように、一定の条件がそろいある程度の費用を負担できるとかなり高い品質の声を獲得することは既に可能になっています。そこでこれ以降はそれ以外の人たち向けにごく低価格で声を出す方法について話を進めていくことにします。
</p><p>
このようにより多くの選択肢を準備し提供する取り組みにはある重要な意味があります。特に病気やけがで『このやり方しかありません』『ほかに手段はありません』などの言葉を受けた人々には、より多くの選択肢と方法や手段を用意しその中から自分で選んで決める機会を提供することで、自己選択、自立と自律、再起へとすすんでいただくことができると考えられています。そしてリハビリテーションのめざすところがここにあると思います。そのためにもあまりお金がかからない方法が求められるのです。
</p>
<h2>声を出すいろいろな方法</h2>
<p>
エンチャント文字盤ではこれまで予め用意した音声ファイルを前回説明した方法で再生していました。この方法では『あ』をクリックすると「あ」と発音し、『ありがとう』をクリックすると「ありがとう」と発声します。
</p><p>
しかしこの方法では予め準備した言葉しか発声できません。
例えば、しゃべる文字盤50音で自由に作った文章を読み上げるにはうまく対応できません。

例えば「こんにちは」と発声するのに、「こ」「ん」「に」「ち」「は」と順番に声を出したのではアクセントはまるでデタラメで大昔のSF映画のような品質になります。でももしかしたら小さなこどもさんは喜んでくれるかもしれません。
</p><p>
一般的に合成音声とかTTS（text to speech）と呼ばれる、『文字を声に変換する技術』でこの問題は解決に近づきます。エンチャント文字盤はJavaScriptという言語で作られているので合成音声も同じ言語で扱えること、さらに誰でも無料で利用できるために費用のかからない合成音声を探したところWebSpeechAPIに行き着きました。
</p><p>
このページの一番上にJavaScriptで作ったWebSpeechAPIのデモサンプルを組み込みました。エンチャント文字盤の読み上げ機能にも基本的に同じものが使われています。
テキストボックスに任意の文字を入れて『話す』をクリックすると発声します。
10年ほど間にも同じ試みを行いましたが当時とは比較にならないくらい品質が向上し人間の声に近づいています。これで無料とはとても信じられません。
</p>
<h2>WebSpeechAPIで声を出す方法</h2>
<p>
使ってみると、WebSpeechAPIは単純に文字列を追って声を出しているのではなく、事前に文字列のなかの単語を識別して発声を決めているようです。たとえば、『トマト』は野菜のトマトのアクセントで発声しますが、『とまと』では異なるアクセントで発声します。
</p><p>
これは外国語の場合はさらにはっきりします。西洋言語の場合既にインストールされている英語（米語）言語データを使用してとにかく発声を試みるためか、英語訛りのフランス語が発声されることが特に初期にはよくあります。
</p><p>
おそらく日本語の場合も類似の方法を使用していると思われます。いずれのせよ各国語の話し言葉の研究がWebSpeechAPIの基礎に存在するのだと思います。
</p><p>
WEBspeechAPIでの声の出し方。
</p>

<pre class="brush: javascript;">
            //　音声の設定　起動時の音声発声
            var synthes = new SpeechSynthesisUtterance();
               synthes.voiceURI = 'Google 日本人';//'native';
               synthes.volume = 1;
               synthes.rate = 0.9;
               synthes.pitch = 0.75;
               synthes.lang = 'ja-JP';
               synthes.text = '準備出来ました';
               //synthes.lang = 'en-US';
               //synthes.text = 'hello, Now, We start the enchant.js';
               speechSynthesis.speak(synthes);

</pre>
<p>
このコードはエンチャント文字盤の50音文字盤の起動時の『準備出来ました』発声部分です。米語を試した部分が、//でコメントアウトしてあります。<br>
前半は声の設定部で、volumeとrateとpitchが調整できます。<br>
７行目は発声する言語、日本語を選んでいます。
８行目は発声する文字列を設定しています。
１１行目で発声しています。
日本語以外には、英語8種類スペイン語20種類を含む60種類以上の言葉を選べます。
</p>

<pre class="brush: javascript;">
                synthes.text = '全部消す';
                speechSynthesis.speak(synthes);
</pre>
<p>
こちらは全文字消去の時の発声部分です。synthes.text に文字列を代入して speechSynthesis.speak(synthes)で発声しています。発声の際にやるべきことはこれだけです。
</p>
<h2>おわりに</h2>
<p>
今回はエンチャント文字盤で声を出す目的と方法について説明しました。
この方法でパソコンもスマホもタブレットもしゃべります。何か国語もしゃべります。
</p><p>
WebSpeechAPIの使い方やサンプルは検索するとたくさん見つかります。
ここまで説明したこともごく短時間で見つかります。またさらに詳しい解説記事も読むことができます。このような知識や技能が簡単に手に入るのがインターネットのスゴイところです。
</p><p>
普通ならここで目的は達成されめでたしめでたしなのですが、
ここから先に問題が潜んでいました。
次回はその問題と対応策についてお送りします。
</p>

<h2>参考URL</h2>
<p>Web Speech API関係
<ul>
  <li>Web Speech API（TTS部分のみ）を試してみた<br>
<a target="_blank" href="http://blog.e-riverstyle.com/2015/01/web-speech-apitts.html">http://blog.e-riverstyle.com/2015/01/web-speech-apitts.html</a></li>
  <li>What are the supported languages for Web Speech API in HTML5?<br>
<a target="_blank" href="https://stackoverflow.com/questions/23733537/what-are-the-supported-languages-for-web-speech-api-in-html5">https://stackoverflow.com/questions/23733537/what-are-the-supported-languages-for-web-speech-api-in-html5</a></li>
</ul>
  <p>その他
<ul>
  <li>その人の声を再生する音声合成技術　ボイスター<br>ヒューマンテクノシステムグループ<br>
<a target="_blank" href="http://hits.kkhts.com/2016HTS/Solution/Voistar/home/">http://hits.kkhts.com/2016HTS/Solution/Voistar/home/</a></li>
</ul>

<hr style="width: 60%; height: 5%; color: black;">
<p><span class="samples">2018/03/30　公開<br>

</span></p>

<a href="../index.html" target="_self">
  <p align="center">研究企画課リハ工学科にもどる</p>
  </a>

  </body>
</html>
